library(forecast)
df<-data(AirPassengers)
print(df)

class(AirPassengers)
AirPassengers

start(AirPassengers)
end(AirPassengers)
#intervals of the data
frequency(AirPassengers)

tsdata=data(AirPassengers)
sum(is.na(tsdata))
summary(AirPassengers)
plot(AirPassengers)  
cycle(AirPassengers)
boxplot(AirPassengers ~ cycle(AirPassengers))
#cycle(tsdata)
#decompositio of ts
#it tells us the irregularity i the data
tsdata<-ts(AirPassengers, frequency = 12)
ddata<-decompose(tsdata, "multiplicative")
plot(ddata)
plot(tsdata)
str(tsdata)
plot(AirPassengers)
abline((reg=lm(AirPassengers ~ time(AirPassengers))))

#to make data stationary
plot(log(AirPassengers))
plot(diff(log(AirPassengers)))

#implementation
#1. usig auto.arima() fuctio
mymodel<-auto.arima(AirPassengers)
mymodel
#2.using acf() and pacf()
acf(AirPassengers)
acf(diff(log(AirPassengers))) #this will give q value
pacf(diff(log(AirPassengers)))

fit<-arima(log(AirPassengers), c(0,1,1), seasonal = list(order=c(0,1,1), period=12))
pred<-predict(fit, n.ahead = 10*12)  #predicting for the next 10 years
pred
#our values are in logarethmic form, to convert them into decimal format we have to use e value. e value is 2.718
pred1<-2.718^pred$pred
pred1
ts.plot(AirPassengers, pred1, log="y", lty=c(1,3))
#till 60 it shows the actual values and after that it is the predicted values
#testing the model
#for testing the model we take the data till 1959 and we will predict the value 1960 and we will validate the predictions
datawide<-ts(AirPassengers, frequency = 12, start = c(1949,1), end = c(1959,12))
datawide
#fit<-arima(log(datawide), c(0,1,1), seasonal=list(order=c(0,1,1), period=12)))
fit<-arima(log(datawide), c(0,1,1), seasonal = list(order=c(0,1,1), period=12))
pred<-predict(fit, n.ahead = 10*12)  #predicting for the next 10 years
pred
pred1<-2.718^pred$pred
pred1
data1<-head(pred1,12)
data1
predict_1960<-round(data1, digits = 0)
predict_1960
original_1960<-tail(AirPassengers,12)
original_1960
#we can see that the predicted and original value are very much close
#model validation
Box.test(fit$resid, lag = 5, type = "Ljung-Box")  
Box.test(fit$resid, lag = 10, type = "Ljung-Box")
Box.test(fit$resid, lag = 15, type = "Ljung-Box")

